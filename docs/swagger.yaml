definitions:
  model.ResponseError:
    properties:
      error:
        $ref: '#/definitions/model.ResponseErrorField'
      success:
        default: false
        type: boolean
    type: object
  model.ResponseErrorField:
    properties:
      code:
        type: string
      description:
        type: string
      details:
        type: string
    type: object
  model.ResponseSuccess:
    properties:
      data: {}
      success:
        default: true
        type: boolean
    type: object
  requests.createBookingRequestCalendarEvent:
    properties:
      date:
        type: string
    required:
    - date
    type: object
  requests.createBookingRequestData:
    properties:
      calendarEvents:
        items:
          $ref: '#/definitions/requests.createBookingRequestCalendarEvent'
        type: array
      creativeSpaceId:
        type: integer
    required:
    - calendarEvents
    - creativeSpaceId
    type: object
  requests.createCreativeSpaceRequestCalendar:
    properties:
      events:
        items:
          $ref: '#/definitions/requests.createCreativeSpaceRequestCalendarEvent'
        type: array
      link:
        type: string
      workDayIndexes:
        items:
          type: integer
        type: array
    required:
    - events
    - workDayIndexes
    type: object
  requests.createCreativeSpaceRequestCalendarEvent:
    properties:
      date:
        type: string
    required:
    - date
    type: object
  requests.createCreativeSpaceRequestCoordinate:
    properties:
      latitude:
        type: number
      longitude:
        type: number
    required:
    - latitude
    - longitude
    type: object
  requests.createCreativeSpaceRequestData:
    properties:
      address:
        type: string
      calendar:
        $ref: '#/definitions/requests.createCreativeSpaceRequestCalendar'
      coordinate:
        $ref: '#/definitions/requests.createCreativeSpaceRequestCoordinate'
      description:
        type: string
      metroStations:
        items:
          $ref: '#/definitions/requests.createCreativeSpaceRequestMetroStation'
        type: array
      photos:
        items:
          type: string
        type: array
      pricePerDay:
        type: integer
      title:
        type: string
    required:
    - address
    - calendar
    - coordinate
    - description
    - photos
    - pricePerDay
    - title
    type: object
  requests.createCreativeSpaceRequestMetroStation:
    properties:
      distanceInMinutes:
        type: integer
      id:
        type: integer
    required:
    - distanceInMinutes
    - id
    type: object
  requests.createSessionRequestData:
    properties:
      password:
        type: string
      phone:
        type: string
    required:
    - password
    - phone
    type: object
  requests.createUserRequestData:
    properties:
      password:
        type: string
      phone:
        type: string
      role:
        type: string
    required:
    - password
    - phone
    - role
    type: object
  requests.deleteFileRequestData:
    properties:
      fileName:
        type: string
    required:
    - fileName
    type: object
  requests.patchCreativeSpaceRequestCalendar:
    properties:
      events:
        items:
          $ref: '#/definitions/requests.patchCreativeSpaceRequestCalendarEvent'
        type: array
      link:
        type: string
      workDayIndexes:
        items:
          type: integer
        type: array
    type: object
  requests.patchCreativeSpaceRequestCalendarEvent:
    properties:
      date:
        type: string
    type: object
  requests.patchCreativeSpaceRequestCoordinate:
    properties:
      latitude:
        type: number
      longitude:
        type: number
    type: object
  requests.patchCreativeSpaceRequestData:
    properties:
      address:
        type: string
      calendar:
        $ref: '#/definitions/requests.patchCreativeSpaceRequestCalendar'
      coordinate:
        $ref: '#/definitions/requests.patchCreativeSpaceRequestCoordinate'
      description:
        type: string
      id:
        type: integer
      metroStations:
        items:
          $ref: '#/definitions/requests.patchCreativeSpaceRequestMetroStation'
        type: array
      photos:
        items:
          type: string
        type: array
      pricePerDay:
        type: integer
      title:
        type: string
    type: object
  requests.patchCreativeSpaceRequestMetroStation:
    properties:
      distanceInMinutes:
        type: integer
      id:
        type: integer
    type: object
  requests.patchUserRequestData:
    properties:
      id:
        type: integer
      phone:
        type: string
    type: object
  responses.convertCaledarFromLinkResponseData:
    properties:
      events:
        items:
          $ref: '#/definitions/responses.convertCaledarFromLinkResponseEvent'
        type: array
    type: object
  responses.convertCaledarFromLinkResponseEvent:
    properties:
      date:
        type: string
    type: object
  responses.convertCaledarResponseData:
    properties:
      events:
        items:
          $ref: '#/definitions/responses.convertCaledarResponseEvent'
        type: array
    type: object
  responses.convertCaledarResponseEvent:
    properties:
      date:
        type: string
    type: object
  responses.createBookingResponseBooking:
    properties:
      id:
        type: integer
    type: object
  responses.createBookingResponseData:
    properties:
      booking:
        $ref: '#/definitions/responses.createBookingResponseBooking'
    type: object
  responses.createCreativeSpaceResponseCreativeSpace:
    properties:
      id:
        type: integer
    type: object
  responses.createCreativeSpaceResponseData:
    properties:
      creativeSpace:
        $ref: '#/definitions/responses.createCreativeSpaceResponseCreativeSpace'
    type: object
  responses.createFileResponseFile:
    properties:
      name:
        type: string
    type: object
  responses.createFileStationsResponseData:
    properties:
      file:
        $ref: '#/definitions/responses.createFileResponseFile'
    type: object
  responses.createSessionResponseData:
    properties:
      user:
        $ref: '#/definitions/responses.createSessionResponseUser'
    type: object
  responses.createSessionResponseUser:
    properties:
      id:
        type: integer
      phone:
        type: string
      role:
        type: string
    type: object
  responses.createUserResponseData:
    properties:
      user:
        $ref: '#/definitions/responses.createUserResponseUser'
    type: object
  responses.createUserResponseUser:
    properties:
      id:
        type: integer
    type: object
  responses.getAddressesResponseData:
    properties:
      addresses:
        items:
          $ref: '#/definitions/responses.getAddressesResponseUser'
        type: array
    type: object
  responses.getAddressesResponseUser:
    properties:
      latitude:
        type: string
      longitude:
        type: string
      value:
        type: string
    type: object
  responses.getBookingResponseBooking:
    properties:
      calendarEvents:
        items:
          $ref: '#/definitions/responses.getBookingResponseCalendarEvent'
        type: array
      creativeSpaceId:
        type: integer
      fullPrice:
        type: integer
      id:
        type: integer
      landlordId:
        type: integer
      status:
        type: string
      tenantId:
        type: integer
    type: object
  responses.getBookingResponseCalendarEvent:
    properties:
      date:
        type: string
    type: object
  responses.getBookingResponseData:
    properties:
      booking:
        $ref: '#/definitions/responses.getBookingResponseBooking'
    type: object
  responses.getBookingsResponseBooking:
    properties:
      calendarEvents:
        items:
          $ref: '#/definitions/responses.getBookingsResponseCalendarEvent'
        type: array
      creativeSpaceId:
        type: integer
      fullPrice:
        type: integer
      id:
        type: integer
      landlordId:
        type: integer
      status:
        type: string
      tenantId:
        type: integer
    type: object
  responses.getBookingsResponseCalendarEvent:
    properties:
      date:
        type: string
    type: object
  responses.getBookingsResponseData:
    properties:
      bookings:
        items:
          $ref: '#/definitions/responses.getBookingsResponseBooking'
        type: array
    type: object
  responses.getCreativeSpaceResponseCalendar:
    properties:
      events:
        items:
          $ref: '#/definitions/responses.getCreativeSpaceResponseCalendarEvent'
        type: array
      link:
        type: string
      workDayIndexes:
        items:
          type: integer
        type: array
    type: object
  responses.getCreativeSpaceResponseCalendarEvent:
    properties:
      date:
        type: string
    type: object
  responses.getCreativeSpaceResponseCoordinate:
    properties:
      latitude:
        type: number
      longitude:
        type: number
    type: object
  responses.getCreativeSpaceResponseCreativeSpace:
    properties:
      address:
        type: string
      calendar:
        $ref: '#/definitions/responses.getCreativeSpaceResponseCalendar'
      coordinate:
        $ref: '#/definitions/responses.getCreativeSpaceResponseCoordinate'
      description:
        type: string
      id:
        type: integer
      landlordId:
        type: integer
      metroStations:
        items:
          $ref: '#/definitions/responses.getCreativeSpaceResponseMetroStation'
        type: array
      photos:
        items:
          type: string
        type: array
      pricePerDay:
        type: integer
      title:
        type: string
    type: object
  responses.getCreativeSpaceResponseData:
    properties:
      creativeSpace:
        $ref: '#/definitions/responses.getCreativeSpaceResponseCreativeSpace'
    type: object
  responses.getCreativeSpaceResponseMetroStation:
    properties:
      color:
        type: string
      distanceInMinutes:
        type: integer
      id:
        type: integer
      name:
        type: string
    type: object
  responses.getCreativeSpacesResponseCalendar:
    properties:
      events:
        items:
          $ref: '#/definitions/responses.getCreativeSpacesResponseCalendarEvent'
        type: array
      link:
        type: string
      workDayIndexes:
        items:
          type: integer
        type: array
    type: object
  responses.getCreativeSpacesResponseCalendarEvent:
    properties:
      date:
        type: string
    type: object
  responses.getCreativeSpacesResponseCoordinate:
    properties:
      latitude:
        type: number
      longitude:
        type: number
    type: object
  responses.getCreativeSpacesResponseCreativeSpace:
    properties:
      address:
        type: string
      calendar:
        $ref: '#/definitions/responses.getCreativeSpacesResponseCalendar'
      coordinate:
        $ref: '#/definitions/responses.getCreativeSpacesResponseCoordinate'
      description:
        type: string
      id:
        type: integer
      landlordId:
        type: integer
      metroStations:
        items:
          $ref: '#/definitions/responses.getCreativeSpacesResponseMetroStation'
        type: array
      photos:
        items:
          type: string
        type: array
      pricePerDay:
        type: integer
      title:
        type: string
    type: object
  responses.getCreativeSpacesResponseData:
    properties:
      creativeSpaces:
        items:
          $ref: '#/definitions/responses.getCreativeSpacesResponseCreativeSpace'
        type: array
    type: object
  responses.getCreativeSpacesResponseMetroStation:
    properties:
      color:
        type: string
      distanceInMinutes:
        type: integer
      id:
        type: integer
      name:
        type: string
    type: object
  responses.getMetroStationsResponseData:
    properties:
      metroStations:
        items:
          $ref: '#/definitions/responses.getMetroStationsResponseMetroStation'
        type: array
    type: object
  responses.getMetroStationsResponseMetroStation:
    properties:
      color:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  responses.getUserResponseData:
    properties:
      user:
        $ref: '#/definitions/responses.getUserResponseUser'
    type: object
  responses.getUserResponseUser:
    properties:
      id:
        type: integer
      phone:
        type: string
      role:
        type: string
    type: object
  responses.getUsersResponseData:
    properties:
      users:
        items:
          $ref: '#/definitions/responses.getUsersResponseUser'
        type: array
    type: object
  responses.getUsersResponseUser:
    properties:
      id:
        type: integer
      phone:
        type: string
      role:
        type: string
    type: object
host: localhost:8080.
info:
  contact: {}
  title: Starter API
paths:
  /api/v1/addresses:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/model.ResponseSuccess'
            - properties:
                data:
                  $ref: '#/definitions/responses.getAddressesResponseData'
              type: object
        "403":
          description: 'Коды ошибок: [1100]'
          schema:
            $ref: '#/definitions/model.ResponseError'
      summary: Возвращает список пользователей
  /api/v1/booking:
    post:
      consumes:
      - application/json
      parameters:
      - description: Параметры запроса
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/requests.createBookingRequestData'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/model.ResponseSuccess'
            - properties:
                data:
                  $ref: '#/definitions/responses.createBookingResponseData'
              type: object
        "403":
          description: 'Коды ошибок: [1100]'
          schema:
            $ref: '#/definitions/model.ResponseError'
      summary: Бронирование креативной площадки
  /api/v1/booking/:id:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/model.ResponseSuccess'
            - properties:
                data:
                  $ref: '#/definitions/responses.getBookingResponseData'
              type: object
        "403":
          description: 'Коды ошибок: [1100]'
          schema:
            $ref: '#/definitions/model.ResponseError'
      summary: Возвращает бронирование по id
  /api/v1/bookings:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/model.ResponseSuccess'
            - properties:
                data:
                  $ref: '#/definitions/responses.getBookingsResponseData'
              type: object
        "403":
          description: 'Коды ошибок: [1100]'
          schema:
            $ref: '#/definitions/model.ResponseError'
      summary: Возвращает список бронирований
  /api/v1/calendar/convert:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/model.ResponseSuccess'
            - properties:
                data:
                  $ref: '#/definitions/responses.convertCaledarResponseData'
              type: object
        "403":
          description: 'Коды ошибок: [1100]'
          schema:
            $ref: '#/definitions/model.ResponseError'
      summary: Возвращает события календаря
  /api/v1/calendar/convertFromLink:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/model.ResponseSuccess'
            - properties:
                data:
                  $ref: '#/definitions/responses.convertCaledarFromLinkResponseData'
              type: object
        "403":
          description: 'Коды ошибок: [1100]'
          schema:
            $ref: '#/definitions/model.ResponseError'
      summary: Возвращает события календаря
  /api/v1/creativeSpace:
    post:
      consumes:
      - application/json
      parameters:
      - description: Параметры запроса
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/requests.createCreativeSpaceRequestData'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/model.ResponseSuccess'
            - properties:
                data:
                  $ref: '#/definitions/responses.createCreativeSpaceResponseData'
              type: object
        "403":
          description: 'Коды ошибок: [1100]'
          schema:
            $ref: '#/definitions/model.ResponseError'
      summary: Создание креативной площадки
  /api/v1/creativeSpaces:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/model.ResponseSuccess'
            - properties:
                data:
                  $ref: '#/definitions/responses.getCreativeSpacesResponseData'
              type: object
        "403":
          description: 'Коды ошибок: [1100]'
          schema:
            $ref: '#/definitions/model.ResponseError'
      summary: Возвращает список креативных площадок
  /api/v1/creativeSpaces/:id:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Id креативной площадки
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseSuccess'
        "403":
          description: 'Коды ошибок: [1100]'
          schema:
            $ref: '#/definitions/model.ResponseError'
      summary: Удаление информации о креативной площадке
    get:
      parameters:
      - description: Id креативной площадки
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/model.ResponseSuccess'
            - properties:
                data:
                  $ref: '#/definitions/responses.getCreativeSpaceResponseData'
              type: object
        "403":
          description: 'Коды ошибок: [1100]'
          schema:
            $ref: '#/definitions/model.ResponseError'
      summary: Возвращает информацию о пользователе
    patch:
      consumes:
      - application/json
      parameters:
      - description: Id креативного пространства
        in: path
        name: id
        required: true
        type: string
      - description: Параметры запроса
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/requests.patchCreativeSpaceRequestData'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseSuccess'
        "403":
          description: 'Коды ошибок: [1100]'
          schema:
            $ref: '#/definitions/model.ResponseError'
      summary: Обновление информации о креативном пространстве
  /api/v1/file:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/model.ResponseSuccess'
            - properties:
                data:
                  $ref: '#/definitions/responses.createFileStationsResponseData'
              type: object
        "403":
          description: 'Коды ошибок: [1100]'
          schema:
            $ref: '#/definitions/model.ResponseError'
      summary: Возвращает ссылку на файл
  /api/v1/files/:fileName:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: Параметры запроса
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/requests.deleteFileRequestData'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseSuccess'
        "403":
          description: 'Коды ошибок: [1100]'
          schema:
            $ref: '#/definitions/model.ResponseError'
      summary: Удаляет файл из s3
  /api/v1/health:
    get:
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseSuccess'
      summary: Проверка работоспособности сервера
  /api/v1/metroStations:
    get:
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/model.ResponseSuccess'
            - properties:
                data:
                  $ref: '#/definitions/responses.getMetroStationsResponseData'
              type: object
        "403":
          description: 'Коды ошибок: [1100]'
          schema:
            $ref: '#/definitions/model.ResponseError'
      summary: Возвращает полный список станций метро
  /api/v1/session:
    delete:
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseSuccess'
        "403":
          description: 'Коды ошибок: [1100]'
          schema:
            $ref: '#/definitions/model.ResponseError'
      summary: Удаление сессии
    get:
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseSuccess'
        "403":
          description: 'Коды ошибок: [1100]'
          schema:
            $ref: '#/definitions/model.ResponseError'
      summary: Получение сессии
    post:
      consumes:
      - application/json
      parameters:
      - description: Параметры запроса
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/requests.createSessionRequestData'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/model.ResponseSuccess'
            - properties:
                data:
                  $ref: '#/definitions/responses.createSessionResponseData'
              type: object
      summary: Создание сессии пользователя
  /api/v1/user:
    post:
      consumes:
      - application/json
      parameters:
      - description: Параметры запроса
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/requests.createUserRequestData'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/model.ResponseSuccess'
            - properties:
                data:
                  $ref: '#/definitions/responses.createUserResponseData'
              type: object
        "403":
          description: 'Коды ошибок: [1100]'
          schema:
            $ref: '#/definitions/model.ResponseError'
      summary: Создание пользователя
  /api/v1/users:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/model.ResponseSuccess'
            - properties:
                data:
                  $ref: '#/definitions/responses.getUsersResponseData'
              type: object
        "403":
          description: 'Коды ошибок: [1100]'
          schema:
            $ref: '#/definitions/model.ResponseError'
      summary: Возвращает список пользователей
  /api/v1/users/:id:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Id пользователя
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseSuccess'
        "403":
          description: 'Коды ошибок: [1100]'
          schema:
            $ref: '#/definitions/model.ResponseError'
      summary: Удаление информации о пользователе
    get:
      parameters:
      - description: Id пользователя
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/model.ResponseSuccess'
            - properties:
                data:
                  $ref: '#/definitions/responses.getUserResponseData'
              type: object
        "403":
          description: 'Коды ошибок: [1100]'
          schema:
            $ref: '#/definitions/model.ResponseError'
      summary: Возвращает информацию о пользователе
    patch:
      consumes:
      - application/json
      parameters:
      - description: Id пользователя
        in: path
        name: id
        required: true
        type: string
      - description: Параметры запроса
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/requests.patchUserRequestData'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseSuccess'
        "403":
          description: 'Коды ошибок: [1100]'
          schema:
            $ref: '#/definitions/model.ResponseError'
      summary: Обновление информации о пользователе
swagger: "2.0"
